<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - MULTCONTROL</title>
    <style>
        /* Define a fonte local para não depender da internet */
        @font-face {
            font-family: 'MedievalSharp';
            src: url('MedievalSharp-Regular.ttf') format('truetype');
        }

        /* Define a base fluida para o design */
        html {
            font-size: clamp(14px, 1.5vw + 0.5rem, 18px);
        }

        body {
            margin: 0;
            padding: 1rem;
            font-family: 'MedievalSharp', cursive;
            font-size: 1rem;
            background: url('https://i.imgur.com/spPUGqP.png') repeat, #30221d;
            background-size: cover;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            box-sizing: border-box;
            overflow: hidden;
        }

        .login-container {
            background: rgba(43, 30, 25, 0.25); /* Fundo transparente escuro */
            backdrop-filter: blur(2px);
            padding: 1.2rem 2.2rem;
            border: 1px solid rgba(207, 163, 68, 0.3);
            border-radius: 1.25rem;
            box-shadow: 0 0 2.5rem rgba(0, 0, 0, 0.5);
            max-width: 23.75rem;
            width: 90%;
            text-align: center;
            position: relative;
            z-index: 10;
            box-sizing: border-box;
        }

        .login-container img.logo {
            width: 8rem;
            max-width: 100%;
            height: auto;
            margin-bottom: 1rem;
        }

        .input-group {
            margin-bottom: 1rem;
            text-align: left;
        }

        .input-group label {
            color: #fff;
            font-weight: bold;
            display: block;
            margin-bottom: 0.3125rem;
            font-size: 1rem;
        }

        .input-group input {
            width: 100%;
            padding: 0.625rem;
            border: 2px solid #cfa344;
            border-radius: 0.5rem;
            background-color: rgba(255, 255, 255, 0.8);
            font-size: 1rem;
            font-family: inherit;
            box-sizing: border-box;
            color: #333;
        }

        .input-group input:focus {
            border-color: #f3d999;
            outline: none;
        }

        .forgot-password {
            margin-top: -0.5rem;
            margin-bottom: 1rem;
            text-align: right;
        }

        .forgot-password a {
            color: #fff;
            text-decoration: none;
            font-size: 0.9em;
        }
        
        .forgot-password a:hover {
            text-decoration: underline;
        }

        .button-group {
            margin-top: 1.5rem;
        }

        button {
            background: rgba(139, 90, 43, 0.7);
            color: #fff8dc;
            padding: 0.75rem;
            border: 2px solid #cfa344;
            border-radius: 0.5rem;
            cursor: pointer;
            font-size: 1.1rem;
            font-weight: bold;
            font-family: inherit;
            transition: background-color 0.3s ease, transform 0.2s ease;
            width: 100%;
            margin-bottom: 0.75rem;
            box-sizing: border-box;
        }

        button:hover {
            background-color: rgba(160, 82, 45, 0.8);
            transform: scale(1.05);
        }
        
        button:disabled {
            background-color: #555;
            border-color: #444;
            cursor: not-allowed;
            transform: none;
        }
        
        .message {
            margin-top: 1rem;
            color: #ff8a80; /* Vermelho claro para erro */
            font-weight: bold;
        }
        
        .success-message {
            color: #b9f6ca; /* Verde claro para sucesso */
        }

        .loader {
            border: 4px solid #444;
            border-top: 4px solid #cfa344; /* Cor dourada do tema */
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
            margin: 1rem auto 0;
            display: none;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Elementos da Animação */
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(5px);
            z-index: 9998;
            display: none;
            transition: backdrop-filter 0.4s ease-in;
        }

        .espada {
            position: fixed;
            bottom: -20rem;
            left: 50%;
            transform: translateX(-50%) rotate(-20deg);
            width: 18rem;
            z-index: 9999;
            transition: bottom 0.7s cubic-bezier(0.6, -0.28, 0.735, 0.045);
        }

        .espada.caindo {
            bottom: 10%;
        }

    </style>
</head>
<body>
    <div class="login-container">
        <img class="logo" src="https://i.imgur.com/l957Jp1.png" alt="Logo MultControl" />
        
        <div class="input-group">
            <label for="email">E-mail:</label>
            <input type="email" id="email" placeholder="seuemail@exemplo.com" required>
        </div>
        <div class="input-group">
            <label for="password">Senha:</label>
            <input type="password" id="password" placeholder="Sua senha" required>
        </div>
        <div class="forgot-password">
            <a href="#" id="forgotPasswordLink">Esqueceu a senha?</a>
        </div>
        <div class="button-group">
            <button id="loginBtn">Entrar</button>
            <button id="signupBtn">Registrar</button>
            <div class="loader" id="loader"></div>
            <p class="message" id="message"></p>
        </div>
    </div>

    <div class="overlay" id="overlay"></div>
    <img src="https://i.imgur.com/1Wakroa.png" class="espada" id="espada" alt="Espada" />
    <audio id="espadaSom" src="https://cdn.pixabay.com/download/audio/2022/03/15/audio_f05b7b1c29.mp3?filename=sword-hit-7161.mp3"></audio>

    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-auth-compat.js"></script>

    <script>
        // Esta parte que insere a configuração do Firebase via EJS é mantida
        const firebaseConfig = <%- JSON.stringify(firebaseConfig) %>;
        firebase.initializeApp(firebaseConfig);
        const auth = firebase.auth();
    </script>

    <script>
        // O script principal foi adaptado para incluir a animação
        function initializeLoginPage() {
            // Elementos da página
            const emailInput = document.getElementById('email');
            const passwordInput = document.getElementById('password');
            const loginBtn = document.getElementById('loginBtn');
            const signupBtn = document.getElementById('signupBtn');
            const forgotPasswordLink = document.getElementById('forgotPasswordLink');
            const messageDisplay = document.getElementById('message');
            const loader = document.getElementById('loader');

            // Elementos da animação
            const espada = document.getElementById("espada");
            const som = document.getElementById("espadaSom");
            const overlay = document.getElementById("overlay");

            function showLoading(isLoading) {
                loader.style.display = isLoading ? 'block' : 'none';
                loginBtn.disabled = isLoading;
                signupBtn.disabled = isLoading;
                forgotPasswordLink.style.pointerEvents = isLoading ? 'none' : 'auto';
                emailInput.disabled = isLoading;
                passwordInput.disabled = isLoading;
                if(isLoading) messageDisplay.textContent = '';
            }

            function displayMessage(text, isError = true) {
                messageDisplay.textContent = text;
                messageDisplay.className = 'message ' + (isError ? '' : 'success-message');
            }

            // Função para ativar a animação
            function triggerAnimation() {
                overlay.classList.add("active");
                espada.classList.add("caindo");
                som.play();
            }

            loginBtn.addEventListener('click', async () => {
                const email = emailInput.value;
                const password = passwordInput.value;
                if (!email || !password) {
                    displayMessage('Por favor, preencha todos os campos.');
                    return;
                }
                showLoading(true);
                try {
                    await auth.signInWithEmailAndPassword(email, password);
                    displayMessage('Login realizado com sucesso!', false);
                    triggerAnimation(); // Ativa a animação
                    setTimeout(() => { // Espera a animação terminar para redirecionar
                        window.location.href = '/dashboard.html';
                    }, 1500);
                } catch (error) {
                    showLoading(false); // Libera os botões em caso de erro
                    let errorMessage = 'Erro ao fazer login. Verifique suas credenciais.';
                    if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password' || error.code === 'auth/invalid-credential') {
                        errorMessage = 'E-mail ou senha inválidos.';
                    } else if (error.code === 'auth/invalid-email') {
                        errorMessage = 'Formato de e-mail inválido.';
                    } else if (error.code === 'auth/too-many-requests') {
                        errorMessage = 'Muitas tentativas de login. Tente novamente mais tarde.';
                    }
                    displayMessage(errorMessage);
                }
            });

            signupBtn.addEventListener('click', async () => {
                const email = emailInput.value;
                const password = passwordInput.value;
                if (!email || !password) {
                    displayMessage('Por favor, preencha todos os campos.');
                    return;
                }
                if (password.length < 6) {
                    displayMessage('A senha deve ter pelo menos 6 caracteres.');
                    return;
                }
                showLoading(true);
                try {
                    await auth.createUserWithEmailAndPassword(email, password);
                    displayMessage('Registro realizado com sucesso! Você já está logado.', false);
                    triggerAnimation(); // Ativa a animação
                    setTimeout(() => { // Espera a animação terminar para redirecionar
                        window.location.href = '/dashboard.html';
                    }, 1500);
                } catch (error) {
                    showLoading(false); // Libera os botões em caso de erro
                    let errorMessage = 'Erro ao registrar usuário.';
                    if (error.code === 'auth/email-already-in-use') {
                        errorMessage = 'Este e-mail já está em uso.';
                    } else if (error.code === 'auth/weak-password') {
                        errorMessage = 'A senha é muito fraca (mínimo 6 caracteres).';
                    } else if (error.code === 'auth/invalid-email') {
                        errorMessage = 'Formato de e-mail inválido.';
                    }
                    displayMessage(errorMessage);
                }
            });

            forgotPasswordLink.addEventListener('click', async (event) => {
                event.preventDefault();
                const email = emailInput.value;
                if (!email) {
                    displayMessage('Por favor, digite seu e-mail para redefinir a senha.');
                    return;
                }
                showLoading(true);
                try {
                    await auth.sendPasswordResetEmail(email);
                    displayMessage(`Um e-mail para redefinir sua senha foi enviado para ${email}.`, false);
                } catch (error) {
                    let errorMessage = 'Erro ao redefinir senha. Verifique o e-mail digitado.';
                    if (error.code === 'auth/user-not-found') {
                        errorMessage = 'Não há usuário com este e-mail.';
                    } else if (error.code === 'auth/invalid-email') {
                        errorMessage = 'Formato de e-mail inválido.';
                    }
                    displayMessage(errorMessage);
                } finally {
                    showLoading(false);
                }
            });

            // Redireciona se já estiver logado (opcional, mas bom manter)
            auth.onAuthStateChanged(user => {
                if (user) {
                    window.location.href = '/dashboard.html';
                }
            });
        }
        
        // Inicia tudo
        initializeLoginPage();
    </script>
</body>
</html>
