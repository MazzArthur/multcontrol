<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - Central de Alertas MULTCONTROL</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore-compat.js"></script>

    <style>
        .navbar { background-color: #2c3e50; width: 100%; overflow: hidden; box-shadow: 0 2px 4px rgba(0,0,0,0.1); margin-bottom: 20px; }
        .navbar-container { max-width: 1200px; margin: 0 auto; display: flex; justify-content: flex-start; }
        .navbar a { float: left; color: white; text-align: center; padding: 14px 20px; text-decoration: none; font-size: 17px; font-weight: bold; }
        .navbar a:hover { background-color: #3498db; }
        .navbar a.active { background-color: #2980b9; }
        body { font-family: 'Roboto', sans-serif; margin: 0; padding: 0; background-color: #f4f7f6; color: #333; display: flex; flex-direction: column; align-items: center; min-height: 100vh; }
        .main-container-wrapper { padding: 20px; width: 100%; max-width: 1200px; box-sizing: border-box; }
        header { width: 100%; display: flex; justify-content: space-between; align-items: center; margin-bottom: 25px; border-bottom: 2px solid #eee; padding-bottom: 15px; }
        h1, h2, h3 { color: #2c3e50; text-align: center; }
        .user-info { text-align: right; }
        .user-info p { margin: 0; font-size: 0.9em; color: #555; }
        .user-info button { background-color: #FF5722; color: white; padding: 8px 15px; border: none; border-radius: 5px; cursor: pointer; font-size: 0.9em; font-weight: bold; transition: background-color 0.3s; margin-top: 10px; }
        .panel { background-color: #fff; padding: 25px; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); margin-bottom: 20px; }
        .content-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 20px; width: 100%; }
        .alerts-list { list-style-type: none; padding: 0; margin: 0; max-height: 400px; overflow-y: auto; }
        .no-alerts { color: #777; text-align: center; padding: 20px; }
        .settings-input-group { display: flex; gap: 10px; align-items: center; margin-top: 10px; }
        .settings-input-group input { flex-grow: 1; padding: 10px; border: 1px solid #ccc; border-radius: 4px; }
        .btn-save { background-color: #28a745; margin-top: 0; }
        .btn-save:disabled { background-color: #ccc; }
        .script-generation-section { margin-bottom: 30px; }
        .script-type-box { background-color: #e3f2fd; border: 1px solid #90caf9; border-radius: 8px; padding: 15px 20px; margin-bottom: 15px; display: flex; align-items: center; justify-content: space-between; }
        .script-type-box strong { color: #1976D2; font-size: 1.1em; }
        .copy-script-button { background-color: #2196F3; color: white; padding: 8px 15px; border: none; border-radius: 5px; cursor: pointer; font-size: 0.8em; margin-top: 0; }
        .copy-script-button:hover { background-color: #1976D2; }
        
        /* --- ESTILOS DO ALERTA ATUALIZADOS --- */
        .alert-item {
            display: flex;
            flex-direction: column;
            margin-bottom: 15px;
            border-radius: 6px;
            overflow: hidden;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            border: 1px solid #ddd;
            border-left-width: 5px;
        }
        .alert-item.captcha { border-left-color: #FFC107; }
        .alert-item.build-order { border-left-color: #4CAF50; }
        .alert-item.attack-alert { border-left-color: #D32F2F; }
        
        .alert-timestamp {
            background-color: #495057;
            color: #ffffff;
            padding: 8px 12px;
            font-weight: bold;
            font-size: 0.9em;
        }
        .alert-message {
            background-color: #ffffff;
            padding: 12px 15px;
            display: flex;
            align-items: center;
            color: #333;
        }
        .alert-message .emoji-prefix {
            margin-right: 10px;
            font-size: 1.3em;
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="navbar-container">
            <a href="/dashboard.html" class="active">Dashboard</a>
            <a href="/personalizar">Personalizar Scripts</a>
        </div>
    </nav>

    <div class="main-container-wrapper">
        <header>
            <h1>üö® Central de Alertas Tribal Wars üö®</h1>
            <div class="user-info">
                <p id="userEmailDisplay"></p>
                <p>UID: <strong id="userUidDisplay" style="display:none;"></strong></p>
                <button id="logoutBtn">Sair</button>
            </div>
        </header>

        <div class="panel">
            <h2>Configura√ß√µes de Notifica√ß√£o por WhatsApp</h2>
            <div class="settings-input-group">
                <input type="tel" id="whatsapp-number-input" placeholder="Seu n¬∫ com c√≥digo do pa√≠s (Ex: 5549999999999)">
                <button id="save-whatsapp-btn" class="btn btn-save">Salvar N√∫mero</button>
            </div>
            <small>Formato: C√≥digo do Pa√≠s (55) + DDD + N√∫mero, tudo junto, sem s√≠mbolos.</small>
        </div>

        <div class="panel script-generation-section">
            <h2>Seus Scripts Personalizados (Copiar e Colar no Tampermonkey)</h2>
            <div class="script-type-box">
                <strong>1. Script: Alerta de Captcha</strong>
                <button class="copy-script-button" data-script-id="captchaScriptCode">Copiar</button>
            </div>
            <div class="script-type-box">
                <strong>2. Script: Upador Autom√°tico</strong>
                <button class="copy-script-button" data-script-id="upadorScriptCode">Copiar</button>
            </div>
            <div class="script-type-box">
                <strong>3. Script: Alerta de Ataques</strong>
                <button class="copy-script-button" data-script-id="attackScriptCode">Copiar</button>
            </div>
            <div style="display:none;">
                <code id="captchaScriptCode"></code><code id="upadorScriptCode"></code><code id="attackScriptCode"></code>
            </div>
        </div>

        <button id="activateNotificationsBtn" style="background-color: #4CAF50; margin-bottom: 20px;">
            Ativar Notifica√ß√µes Desktop
        </button>

        <div class="panel">
            <h2>Alertas Recebidos</h2>
            <div class="content-grid">
                <div class="alert-box">
                    <h3>‚öîÔ∏è Alertas de Ataque</h3>
                    <div id="attackAlertsList" class="alerts-list"><p class="no-alerts">Aguardando...</p></div>
                </div>
                <div class="alert-box">
                    <h3>ü§ñ Alertas de Captcha</h3>
                    <div id="captchaAlertsList" class="alerts-list"><p class="no-alerts">Aguardando...</p></div>
                </div>
                <div class="alert-box">
                    <h3>üèóÔ∏è Ordens de Constru√ß√£o</h3>
                    <div id="buildOrderAlertsList" class="alerts-list"><p class="no-alerts">Aguardando...</p></div>
                </div>
            </div>
        </div>
    </div>

<script>
    const firebaseConfig = <%- JSON.stringify(firebaseConfig) %>;
    firebase.initializeApp(firebaseConfig);
    const auth = firebase.auth();
    const dbClient = firebase.firestore();

    document.addEventListener('DOMContentLoaded', () => {
        const whatsappInput = document.getElementById('whatsapp-number-input');
        const saveWhatsappBtn = document.getElementById('save-whatsapp-btn');
        const userEmailDisplay = document.getElementById('userEmailDisplay');
        const logoutBtn = document.getElementById('logoutBtn');
        const userUidDisplay = document.getElementById('userUidDisplay');
        const captchaScriptCodeElement = document.getElementById('captchaScriptCode');
        const upadorScriptCodeElement = document.getElementById('upadorScriptCode');
        const attackScriptCodeElement = document.getElementById('attackScriptCode');
        const captchaAlertsList = document.getElementById('captchaAlertsList');
        const buildOrderAlertsList = document.getElementById('buildOrderAlertsList');
        const attackAlertsList = document.getElementById('attackAlertsList');
        
        function initializeDashboardPage() {
            auth.onAuthStateChanged(async user => {
                if (user) {
                    userEmailDisplay.textContent = `Logado como: ${user.email}`;
                    userUidDisplay.textContent = user.uid;

                    async function apiRequest(endpoint, method = 'GET', body = null) {
                        const idToken = await user.getIdToken();
                        const options = { method, headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${idToken}` } };
                        if (body) options.body = JSON.stringify(body);
                        const response = await fetch(`/api/${endpoint}`, options);
                        if (!response.ok) {
                            const errorData = await response.json();
                            throw new Error(errorData.error || 'Falha na requisi√ß√£o √† API.');
                        }
                        return response.status !== 204 ? await response.json() : null;
                    }
            
                    async function loadUserSettings() {
                        try {
                            const settings = await apiRequest('user/settings');
                            if (settings && settings.whatsappNumber) {
                                whatsappInput.value = settings.whatsappNumber;
                            }
                        } catch (error) { console.warn("N√£o foi poss√≠vel carregar as configura√ß√µes do usu√°rio.", error); }
                    }
            
                    loadUserSettings();
            
                    saveWhatsappBtn.addEventListener('click', async () => {
                        const number = whatsappInput.value.trim();
                        if (!/^\d{12,13}$/.test(number)) {
                            alert('N√∫mero de WhatsApp inv√°lido. Use o formato 55DDD9XXXXXXXX.');
                            return;
                        }
                        saveWhatsappBtn.disabled = true;
                        saveWhatsappBtn.textContent = 'Salvando...';
                        try {
                            await apiRequest('user/settings', 'POST', { whatsappNumber: number });
                            alert('N√∫mero salvo com sucesso!');
                        } catch (error) {
                            alert('Erro ao salvar o n√∫mero. Tente novamente.');
                        } finally {
                            saveWhatsappBtn.disabled = false;
                            saveWhatsappBtn.textContent = 'Salvar N√∫mero';
                        }
                    });

                    try {
                        const idToken = await user.getIdToken();
                        const response = await fetch(`https://multcontrol.onrender.com/get_userscripts_with_token`, {
                            headers: { 'Authorization': `Bearer ${idToken}` }
                        });
                        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                        const scriptsBase64 = await response.json();
                        captchaScriptCodeElement.textContent = atob(scriptsBase64.captchaScriptBase64);
                        upadorScriptCodeElement.textContent = atob(scriptsBase64.upadorScriptBase64);
                        attackScriptCodeElement.textContent = atob(scriptsBase64.ataquesScriptBase64);
                    } catch (error) { console.error('Erro ao obter scripts:', error); }
                    
                    function renderAlert(alert) {
                        const div = document.createElement('div');
                        div.className = 'alert-item';

                        const timestampContainer = document.createElement('div');
                        timestampContainer.className = 'alert-timestamp';
                        const date = alert.timestamp ? alert.timestamp.toDate() : new Date();
                        const formattedDate = date.toLocaleString('pt-BR', { day: '2-digit', month: '2-digit', year: '2-digit', hour: '2-digit', minute: '2-digit' });
                        timestampContainer.textContent = formattedDate.replace(',', ' -');

                        const messageContainer = document.createElement('div');
                        messageContainer.className = 'alert-message';
                        const emojiSpan = document.createElement('span');
                        emojiSpan.className = 'emoji-prefix';
                        const cleanMessage = alert.message.replace(/^[^\w\s]*\s*/, '');

                        messageContainer.appendChild(emojiSpan);
                        messageContainer.appendChild(document.createTextNode(cleanMessage));
                        div.appendChild(timestampContainer);
                        div.appendChild(messageContainer);
                        
                        if (cleanMessage.toUpperCase().includes('CAPTCHA')) {
                            div.classList.add('captcha'); emojiSpan.textContent = 'ü§ñ';
                            captchaAlertsList.prepend(div);
                        } else if (cleanMessage.toUpperCase().includes('ATAQUE')) {
                            div.classList.add('attack-alert'); emojiSpan.textContent = '‚öîÔ∏è';
                            attackAlertsList.prepend(div);
                        } else {
                            div.classList.add('build-order'); emojiSpan.textContent = 'üèóÔ∏è';
                            buildOrderAlertsList.prepend(div);
                        }
                    }

                    dbClient.collection('alerts').where('userId', '==', user.uid).orderBy('timestamp', 'desc').limit(50)
                      .onSnapshot((snapshot) => {
                        const lists = { captcha: captchaAlertsList, attack: attackAlertsList, build: buildOrderAlertsList };
                        Object.values(lists).forEach(list => list.innerHTML = '');
                          
                        snapshot.forEach(doc => {
                            renderAlert(doc.data());
                        });

                        Object.values(lists).forEach(list => {
                            if (!list.hasChildNodes()) {
                                list.innerHTML = '<p class="no-alerts">Nenhum alerta recente.</p>';
                            }
                        });

                      }, (error) => {
                          console.error('[Dashboard] Erro ao ouvir alertas:', error);
                      });
                } else {
                    window.location.href = '/';
                }
            });

            logoutBtn.addEventListener('click', async () => {
                try {
                    await auth.signOut();
                    window.location.href = '/';
                } catch (error) { console.error('Erro ao deslogar:', error); }
            });

            document.querySelectorAll('.copy-script-button').forEach(button => {
                button.addEventListener('click', (event) => {
                    const scriptId = event.target.dataset.scriptId;
                    const codeElement = document.getElementById(scriptId);
                    if (codeElement && codeElement.textContent) {
                        navigator.clipboard.writeText(codeElement.textContent).then(() => {
                            alert('Script copiado para a √°rea de transfer√™ncia!');
                        }).catch(err => console.error('Erro ao copiar texto: ', err));
                    } else {
                        alert('Erro: conte√∫do do script n√£o encontrado.');
                    }
                });
            });
        }
        
        initializeDashboardPage();
    });
</script>
</body>
</html>
